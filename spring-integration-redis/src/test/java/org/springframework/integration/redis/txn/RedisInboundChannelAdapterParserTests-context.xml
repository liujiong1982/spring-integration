<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-redis="http://www.springframework.org/schema/integration/redis"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/redis http://www.springframework.org/schema/integration/redis/spring-integration-redis.xsd">

	<int-redis:inbound-channel-adapter
		id="adapter" topics="foo" topic-patterns="d*, b*" channel="receiveChannel"
		message-converter="testConverter"
		serializer="serializer">
		    <int-redis:transactional synchronization-factory="syncFactory" transaction-manager="transactionManager"/>
	</int-redis:inbound-channel-adapter>

	<int:channel id="receiveChannel"/>
	
	<int:channel id="outputChannel"/>


	<bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="port" value="#{T(org.springframework.integration.redis.rules.RedisAvailableRule).REDIS_PORT}"/>
	</bean>
	
	

	<bean id="testConverter"
		class="org.springframework.integration.redis.config.RedisInboundChannelAdapterParserTests$TestMessageConverter" />


	<bean id="serializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>


	<int-redis:outbound-channel-adapter id="outboundAdapter"
										channel="outputChannel"
										topic-expression="headers['topic'] ?: 'outbound'"
										message-converter="testConverter"
										serializer="serializer">
		<int-redis:request-handler-advice-chain>
			<int:retry-advice/>
		</int-redis:request-handler-advice-chain>
	</int-redis:outbound-channel-adapter>
	
	<int:service-activator input-channel="receiveChannel" expression="payload.toUpperCase()" output-channel="outputChannel"/>
	
	<bean id="transactionManager" class="org.springframework.integration.redis.util.RedisTransactionManager">
		<property name="template">
			<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
				<property name="targetObject" ref="outboundAdapter.handler" />
				<property name="targetMethod" value="getTemplate" />
			</bean>
		</property>
	</bean>
	
	<int-redis:inbound-channel-adapter
		id="exceptionAdapter" topics="exceptionFoo" topic-patterns="d*, b*" channel="exceptionReceiveChannel"
		message-converter="testConverter"
		serializer="serializer">
		    <int-redis:transactional synchronization-factory="syncFactory" transaction-manager="exceptionManager"/>
	</int-redis:inbound-channel-adapter>
	
	<int:channel id="exceptionReceiveChannel"/>
	
	<int:channel id="exceptionOutputChannel"/>
	
	<int:service-activator input-channel="exceptionReceiveChannel" expression="payload.toUpperCase()" output-channel="exceptionOutputChannel"/>
	
	<int-redis:outbound-channel-adapter id="exceptionOutboundAdapter"
										channel="exceptionOutputChannel"
										topic-expression="headers['topic'] ?: 'exceptionOutbound'"
										message-converter="testConverter"
										serializer="serializer">
		<int-redis:request-handler-advice-chain>
			<int:retry-advice/>
		</int-redis:request-handler-advice-chain>
	</int-redis:outbound-channel-adapter>
	
	<bean id="exceptionManager" class="org.springframework.integration.redis.util.ExceptionTransactionManager">
		<property name="template">
			<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
				<property name="targetObject" ref="outboundAdapter.handler" />
				<property name="targetMethod" value="getTemplate" />
			</bean>
		</property>
	</bean>
	
</beans>
